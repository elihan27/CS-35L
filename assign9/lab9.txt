Elizabeth Han
004815046
lab9.txt


To copy the Diffutils repository into preferred directory:
	$ cd ~eggert/src/gnu/diffutils
	$ cp -R diffutils ~/35L/assign9/lab/diffutils
...or, alternatively:
	$ git clone ~eggert/src/gnu/diffutils

To grab log of changes to Diffutils’ master branch:
	$ git log > git-log.txt

To grab list of tags used for Diffutils:
	$ git tag > git-tags.txt

To find the commit entitled “maint: quote 'like this' or "like this", not `like this'”, I 
searched through git-log.txt with C-s, and found that the commit id was: 
62ca21c8c1a5aa3488589dcb191a4ef04ae9ed4f

To generate a patch for that commit:
	$ git show 62ca21c8c1a5aa3488589dcb191a4ef04ae9ed4f > quote-patch.txt

To check out version 3.0 of Diffutils from repository:
	$ git checkout v3.0 -b v3
	Switched to a new branch 'v3'

Attempt to apply quote-patch.txt to version 3.0:
	1. $ patch -pN < quote-patch.txt
		This didn't work, because N is not a number.
	2. $ patch -p0 < quote-patch.txt
		Resulted in: 
			can't find file to patch at input line 35
			Perhaps you used the wrong -p or --strip option?
		Assumed this was normal, and proceeded to skip past all files that patch
		couldn't figure out.  Realized something was wrong after most files were
		skipped over.
	The command that actually worked:
		$ patch -p1 < quote-patch.txt
	Errors:

		patching file README
			Hunk #1 FAILED at 9.
			Hunk #3 FAILED at 60.
		2 out of 3 hunks FAILED -- saving rejects to file README.rej

		patching file src/diff.c
			Hunk #10 FAILED at 876.
			Hunk #11 FAILED at 906.
			Hunk #12 FAILED at 942.
		3 out of 14 hunks FAILED -- saving rejects to file src/diff.c.rej

		patching file src/diff3.c
			Hunk #6 FAILED at 433.
		1 out of 9 hunks FAILED -- saving rejects to file src/diff3.c.rej

To get an overview of what happened:
	$ git status
	
	On branch v3
	Changes not staged for commit:
	  (use "git add/rm <file>..." to update what will be committed)
 	 (use "git checkout -- <file>..." to discard changes in working directory)

		
		modified:   NEWS
		modified:   README
		modified:   TODO
		modified:   doc/diagmeet.note
		modified:   ms/config.bat
		modified:   ms/config.site
		modified:   po/en.po
		modified:   src/analyze.c//
		modified:   src/cmp.c
		modified:   src/context.c//
		modified:   src/diff.c
		modified:   src/diff.h
		modified:   src/diff3.c
		modified:   src/dir.c
		modified:   src/ifdef.c//
		modified:   src/io.c//
		modified:   src/sdiff.c
		modified:   src/side.c//
		modified:   src/system.h
		modified:   src/util.c
		modified:   tests/help-version


	Untracked files:
  	(use "git add <file>..." to include in what will be committed)

		NEWS.orig
		README-hacking.orig
		README-hacking.rej
		README.orig
		README.rej
		cfg.mk.orig
		cfg.mk.rej
		git-log.txt
		git-tags.txt
		ms/config.site.orig
		quote-patch.txt
		src/cmp.c.orig
		src/context.c.orig
		src/diff.c.orig
		src/diff.c.rej
		src/diff.h.orig
		src/diff3.c.orig
		src/diff3.c.rej
		src/dir.c.orig
		src/sdiff.c.orig
		src/system.h.orig
		src/util.c.orig
		tests/help-version.orig

Learn how to use the Emacs functions vc-diff (C-x v =) and vc-revert (C-x v u). When 
you're in the *vc-diff* buffer generated by vc-diff, use describe-mode (C-h m) to find out 
the Emacs functions that you can use there, and in particular learn how to use the diff-
apply-hunk (C-c C-a) and diff-goto-source (C-c C-c) functions.

Attempting to use various Emacs functions:
	Created test file test.txt.  Attempted to use vc-diff (C-x v =), which resulted in 
message 'File is not under version control'. After digging around a bit, I came to the 
conclusion that there was something wrong with the vc-handled-backends variable, so I 
tried $ set vc-handled-backends RCS CVS SVN SCCS Bzr Git Hg Mtn Arch (that is, set to 
default).  When that didn't work, I tried using C-x v v to register the file, which did 
allow vc-diff to work.  Used another branch to experiment with diff-apply-hunk (C-c C-a) 
and diff-goto-source (C-c C-c). 
	While in the *vc-diff* buffer, I used C-h m to get a list of functions:

 key             binding                                
---             -------               
                                                      
C-c             Prefix Command
C-x             Prefix Command 
ESC             Prefix Command
                                                                                     
C-x 4           Prefix Command
                                                                                        
C-c C-a         diff-apply-hunk
C-c C-b         diff-refine-hunk
C-c C-c         diff-goto-source
C-c C-d         diff-unified->context                                            
C-c C-e         diff-ediff-patch                                                         
C-c C-f         next-error-follow-minor-mode                                              
C-c C-n         diff-restrict-view                                                        
C-c C-r         diff-reverse-direction                                                    
C-c C-s         diff-split-hunk                                                           
C-c C-t         diff-test-hunk                                                           
C-c C-u         diff-context->unified                                                     
C-c C-w         diff-ignore-whitespace-hunk                                              
                                                                                          
C-M-i           diff-hunk-next                                                            
M-RET           diff-goto-source                                                          
M-SPC           scroll-up-command                                                         
M--             negative-argument                                                         
M-0 .. M-9      digit-argument                                                            
M-<             beginning-of-buffer                                                       
M->             end-of-buffer                                                             
M-?             describe-mode                                                             
M-K             diff-file-kill               
M-N             diff-file-next                                                            
M-P             diff-file-prev                                                            
M-h             describe-mode                                                             
M-k             diff-hunk-kill                                                            
M-n             diff-hunk-next                                                            
M-o             diff-goto-source                                                          
M-p             diff-hunk-prev                                                            
M-{             diff-file-prev                                                            
M-}             diff-file-next                                                            
M-DEL           scroll-down-command                                                       
M-S-SPC         scroll-down-command                                                       
ESC <backtab>   diff-hunk-prev                                                            
ESC <mouse-2>   diff-goto-source                                                          
ESC <remap>     Prefix Command                                                                                                                                                      

C-x 4 A         diff-add-change-log-entries-other-window    

I reverted the changes to the modified files, specifically, the ones that didn't end in 
.c, with C-x v u.  With the .c files, I used C-c C-c to pick out exactly where the 
file was being modified, and C-u C-c C-a to revert the changes.

I used $ ls src/*.c.rej to figure out which .rej files I needed to look at, and then 
emacs to copy and paste the required lines (C-s to search).

I then removed all untracked files.
	$ rm -r NEWS.orig README-hacking.orig README-hacking.rej README.orig README.rej 
		cfg.mk.orig cfg.mk.rej git-log.txt git-tags.txt ms/config.site.orig quote-
		patch.txt src/#io.c# src/cmp.c.orig src/context.c.orig src/diff.c.orig 
		src/diff.c.rej src/diff.h.orig src/diff3.c.orig src/diff3.c.rej src/
		dir.c.orig src/sdiff.c.orig src/system.h.orig src/util.c.orig tests/help-
		version.orig

Using $ git status does show 6 modified files, and no untracked.  
	$ git diff | wc -l
	335
shows that the result of git diff does output a patch that is three or four hundred lines
long.  
	$ git diff > quote-3.0-patch.txt

To build the resulting modified version of Diffutils (instructions accessed in README-
hacking:
	$ ./bootstrap
	After this, I need to edit the tests/Makefile.am, finding the line containing "; shell_or_
	perl_" and removing "shell_or_perl_".  
	Then I applied the patch specified on the website, first obtaining it with:
		$ wget https://web.cs.ucla.edu/classes/winter18/cs35L/assign/diffutils-gets.diff
	and applying with:
		$ patch -p0 < diffutils-gets.diff
	Then:
		$ chmod +x tests/binary tests/no-newline-at-eof
		$ ./configure
		$ make
		$ make check
After exporting the command I needed ( $ export PATH=/u/cs/ugrad/elizabeh/35L/assign9/lab/
	test02/diffutils/src:$PATH), I used the “diff . -” scenario ($ echo check | diff 
	context.c -) and “diff --help” to check for the correct output.

$ export PATH=/u/cs/ugrad/elizabeh/35L/assign9/lab/test02/diffutils/src:$PATH
To run the sanity test:
	I put the former source code into a directory diffutils-3.0 by:
		$ git clone ~eggert/src/gnu/diffutils //cloning original repository
		$ mv diffutils/src diffutils-3.0
	Then:
		$ cp -R src diffutils-3.0-patch (copied new src code into 
			different directory)
	The test itself is:
		$ src/diff -pru diffutils-3.0 diffutils-3.0-patch > quote-3.0-test.txt

I then compared quote-3.0-test.txt and quote-3.0-patch.txt using diff.
	$ diff quote-3.0-test.txt quote-3.0-patch.txt > diff.diff
The files are significantly different.  Even checking just line count alone shows: 
	quote-3.0-test.txt: 5082 lines
	quote-3.0-patch.txt: 335 lines 
that quote-3.0-test.txt has significantly more lines than quote-3.0-patch.txt.  The 
reason appears to stem from the fact that quote-3.0-test.txt compares far more lines of 
code than quote-3.0-patch.txt, most likely due to the fact that building the modified
Diffutils resulted in far more code than the code before building.  I believe the changes
are significant - though there are areas of similar code, it's not enough to make the 
differences between the two diffs innocuous.  
		
